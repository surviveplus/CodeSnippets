<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>ToString オーバーライド</Title>
      <Author>Surviveplus.net</Author>
      <Description>Overrides ToString method to output all properties.</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>tostring</Shortcut>
    </Header>
    <Snippet>
      <Code Language="csharp" Delimiter="$"><![CDATA[		/// <summary>
		/// Returns a string that represents the current object.
		/// </summary>
		/// <returns>A string that represents the current object.</returns>
		public override string ToString() {

			// Output all properties as like anonymous types ToString method.

			// A lambda expression to format its name and value.
			Func<string, object, string> formmat = ( name, value ) =>
			{
				if (value == null) {
					return name + " = null reference (Nothing in Visual Basic)";
				}
				else {
					return name + " = " + value.ToString();
				} // end if;
			};

			// Find and output its public properties.
			var nameAndValues = 
				from p in this.GetType().GetProperties( System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance )
				select formmat(p.Name, p.GetValue(this) );

			return "{ " + string.Join( ", ", nameAndValues ) + " }";
		} // end function ]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>