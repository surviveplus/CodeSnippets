<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>testClass</Title>
      <Author>Surviveplus.net</Author>
      <Description>テストクラスを定義します。</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>testClass</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>ClassName</ID>
          <ToolTip>テスト対象のクラス名を指定します</ToolTip>
          <Default>TargetClassName</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[	/// <summary>
	/// $ClassName$ のテスト クラスです。すべての $ClassName$ 単体テストテストをここに含めます。
	/// </summary>
	[TestClass]
	public partial class $ClassName$Test
	{

		/// <summary>
		/// 現在のテストの実行についての情報および機能を提供するテスト コンテキストを取得または設定します。
		/// </summary>
		public TestContext TestContext { get; set; }

		#region 追加のテスト属性

		/// <summary>
		///  テストを作成するときに、次の追加属性を使用することができます:
		///  クラスの最初のテストを実行する前にコードを実行するには、ClassInitialize を使用
		/// </summary>
		/// <param name="testContext"></param>
		[ClassInitialize()]
		public static void MyClassInitialize( TestContext testContext ) {
		} // end function

		/// <summary>
		/// クラスのすべてのテストを実行した後にコードを実行するには、ClassCleanup を使用
		/// </summary>
		[ClassCleanup()]
		public static void MyClassCleanup() {
		} // end function

		/// <summary>
		/// 各テストを実行する前にコードを実行するには、TestInitialize を使用
		/// </summary>
		[TestInitialize()]
		public void MyTestInitialize()
		{
		} // end function

		/// <summary>
		/// 各テストを実行した後にコードを実行するには、TestCleanup を使用
		/// </summary>
		[TestCleanup()]
		public void MyTestCleanup() {
		} // end function

		#endregion

		$end$

	} // end class
]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>