<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
      <Title>Extension methods</Title>
      <Author>Surviveplus.net</Author>
      <Description>Code snippet for Extension methods</Description>
      <Shortcut>extensions</Shortcut>
      <SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>namespace</ID>
					<ToolTip>Replace with the Namespace of using directive, to use this extension method.</ToolTip>
					<Default>NameSpace</Default>
				</Literal>
				<Literal>
					<ID>class</ID>
					<ToolTip>Replace with the name of static class which is defined this extension method.</ToolTip>
					<Default>MyExtensions</Default>
				</Literal>
        <Literal>
          <ID>classType</ID>
          <ToolTip>Replace with the type which is added this extension method.</ToolTip>
          <Default>String</Default>
        </Literal>

        <Literal>
          <ID>resultType</ID>
          <ToolTip>Replace with the Return Type.</ToolTip>
          <Default>bool</Default>
        </Literal>

        <Literal>
          <ID>arg1Type</ID>
          <ToolTip>Replace with Type of the first argument.</ToolTip>
          <Default>string</Default>
        </Literal>        
        <Literal>
          <ID>arg1Name</ID>
          <ToolTip>Replace with the name of the first argument.</ToolTip>
          <Default>arg1</Default>
        </Literal>     
        <Literal>
          <ID>Explanation</ID>
          <Type>String</Type>
          <ToolTip>Replace with explanation for the method.</ToolTip>
          <Default>Do something, and return something.</Default>
        </Literal>
        <Literal>
          <ID>resultExplanation</ID>
          <Type>String</Type>
          <ToolTip>Replace with explanation for the Return Type.</ToolTip>
          <Default>Returns true if succeeded; otherwise returns false.</Default>
        </Literal>
        <Literal>
          <ID>arg1Explanation</ID>
          <Type>String</Type>
          <ToolTip>Replace with explanation for the first argument.</ToolTip>
          <Default>Set something.</Default>
        </Literal>
				<Literal>
					<ID>methodName</ID>
					<ToolTip>Replace with the name of method.</ToolTip>
					<Default>Execute</Default>
				</Literal>
                
			</Declarations>
			<Code Language="csharp">
<![CDATA[
		/// <summary>
		/// $Explanation$
		/// </summary>
		/// <param name="me">The instance of the type which is added this extension method.</param>
		/// <param name="$arg1Name$">$arg1Explanation$</param>
		/// <returns>
		/// $resultExplanation$
		/// </returns>
		public static $resultType$ $methodName$( this $classType$ me, $arg1Type$ $arg1Name$ ) {
			if ( me == null ) throw new ArgumentNullException( "me" );

			$end$throw new NotImplementedException();
		} // end function
]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
